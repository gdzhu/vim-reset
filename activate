#!/usr/bin/env bash

# pop $1 from PATH environment variable
path_pop() {
    local path=$1
    local path_array
    local path_index
    IFS=':' read -ra path_array <<< "$PATH"
    for path_index in ${!path_array[*]}
    do
        [[ ${path%/} == ${path_array[${path_index}]%/} ]] && {
            unset path_array[${path_index}]
        }
    done
    export PATH=$( IFS=":"; echo "${path_array[*]}" )
}

# push $1 as the first directory of PATH environment variable
path_push() {
    local path=$1
    path_pop "${path}"
    export PATH=${path}:$PATH
}

get_vim_rtp() {
    ${VIM} 2>/dev/null \
        -c "redir! > /dev/stdout" -c 'set runtimepath' -c 'q' | \
        tail -n1 | cut -d= -f2-
}

# check if vim-reset is already working now
check_vim_reset() {
    grep -IF 'GENERATED_BY_VIM_RESET' "$( which vim )" &>/dev/null
}

if check_vim_reset
then
    return 1
fi

VIM=$( which vim )
[[ -z ${VIM} ]] && {
    echo "No VIM installed?"
    return 1
}

if [[ -z ${VIM_RESET_CONFDIR} ]]
then
    echo "Env-variable 'VIM_RESET_CONFDIR' has to be set" >&2
    echo "Aborting..."
    return 1
else
    echo "Using ${VIM_RESET_CONFDIR}" >&2
fi

if [[ ! -d ${VIM_RESET_CONFDIR} ]]
then
    echo "Creating ${VIM_RESET_CONFDIR}" >&2
    mkdir -p "${VIM_RESET_CONFDIR}"
    [[ $? -ne 0 ]] && {
        echo "Fail to mkdir ${VIM_RESET_CONFDIR}"
        echo "Aborting..."
        return 1
    }
fi

if [[ -z ${VIM_RESET_VIMRC} ]]
then
    VIM_RESET_VIMRC=${VIM_RESET_CONFDIR}/_vimrc
fi

if [[ -n ${VIM_RESET_VIMRTP} ]]
then
    VIM_RESET_VIMRTP=${VIM_RESET_CONFDIR},${VIM_RESET_VIMRTP}
else
    VIM_RESET_VIMRTP=${VIM_RESET_CONFDIR}
fi

VIM_RESET_VIMRTP=${VIM_RESET_VIMRTP},"~/.vim"

declare -a rtps
IFS=',' read -ra rtps < <(echo ${VIM_RESET_VIMRTP})

declare -a _rtps
IFS=',' read -ra _rtps < <(get_vim_rtp)

for rtp_i in ${!rtps[*]}
do
    # Preserve the exact order of the rtps
    rtp=${rtps[$((${#rtps[@]} - ${rtp_i} - 1))]}

    # Skip non-directory path
    [[ -d ${rtp} ]] || continue

    # Remove duplicate paths
    for _rtp_i in ${!_rtps[*]}
    do
        _rtp=${_rtps[${_rtp_i}]}
        {
            [[ ${rtp%/} == ${_rtp%/} ]] || \
                [[ ${rtp%/}/after == ${_rtp%/}/after ]]
        } && {
            unset _rtps[${_rtp_i}]
        }
    done
    [[ ${rtp} == "~/.vim" ]] && continue
    _rtps=( "${rtp}" "${_rtps[@]}" "${rtp}"/after )
done
VIM_RESET_VIMRTP=$( IFS=","; echo "${_rtps[*]}" )

if [[ ! -d ${VIM_RESET_CONFDIR}/bin ]]
then
    mkdir "${VIM_RESET_CONFDIR}/bin"
    [[ $? -ne 0 ]] && {
        echo "Fail to mkdir ${VIM_RESET_CONFDIR}/bin"
        echo "Aborting..."
        return 1
    }
fi

if [[ ! -e ${VIM_RESET_CONFDIR}/bin/vim ]]
then
    cat > "${VIM_RESET_CONFDIR}/bin/vim" <<OUTPUT
#!/usr/bin/env bash
# GENERATED_BY_VIM_RESET
# don't delete the line above

${VIM} --cmd 'set runtimepath=${VIM_RESET_VIMRTP}' -u '${VIM_RESET_VIMRC}' \$@
OUTPUT
    chmod +x "${VIM_RESET_CONFDIR}/bin/vim"
fi

if [[ -f ${VIM_RESET_CONFDIR}/bin/vim ]] && [[ -x ${VIM_RESET_CONFDIR}/bin/vim ]]
then
    path_push "${VIM_RESET_CONFDIR}/bin"
else
    echo "Something odd has happend, please check your ${VIM_RESET_CONFDIR}"
    echo "Aborting..."
    return 1
fi

echo "========================"
echo "VIMRC=${VIM_RESET_VIMRC}"
echo "VIMRTP=${VIM_RESET_VIMRTP}"
echo "========================"

if [[ ! -f ${VIM_RESET_VIMRC} ]]
then
    echo
    echo "WARNING: ${VIM_RESET_VIMRC} doesn't exist, please remember to create it or copy your current ~/.vimrc file" >&2
    echo
fi

unset VIM_RESET_VIMRC
unset VIM_RESET_VIMRTP
