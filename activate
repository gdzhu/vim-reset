#!/usr/bin/env bash

# pop $1 from PATH environment variable
path_pop() {
    local path=$1
    local path_array
    local path_index
    IFS=':' read -ra path_array <<< "$PATH"
    for path_index in ${!path_array[*]}
    do
        [[ ${path%/} == ${path_array[${path_index}]%/} ]] && {
            unset path_array[${path_index}]
        }
    done
    export PATH=$( IFS=":"; echo "${path_array[*]}" )
}

# push $1 as the first directory of PATH environment variable
path_push() {
    local path=$1
    path_pop "${path}"
    export PATH=${path}:$PATH
}

get_vim_rtp() {
    ${VIM} 2>/dev/null \
        -c "redir! > /dev/stdout" -c 'set runtimepath' -c 'q' | \
        tail -n1 | cut -d= -f2- | cut -d, -f2-
}

# check if vim-reset is already working now
check_vim_reset() {
    path_push "${VIM_RESET_CONFDIR}/bin"
    grep -IF 'GENERATED_BY_VIM_RESET' "$( which vim )" &>/dev/null
}

if [[ -z ${VIM_RESET_CONFDIR} ]]
then
    # this is a common one-liner copied from
    # http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
    SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
    VIM_RESET_CONFDIR=${SCRIPT_DIR}/vimconfig
    echo "You didn't specify VIM_RESET_CONFDIR environment, default using ${VIM_RESET_CONFDIR}" >&2
else
    echo "Using ${VIM_RESET_CONFDIR}" >&2
fi

if check_vim_reset
then
    return
fi

if [[ ! -d ${VIM_RESET_CONFDIR} ]]
then
    echo "Creating ${VIM_RESET_CONFDIR}" >&2
    mkdir -p "${VIM_RESET_CONFDIR}"
fi

VIM=$( which vim )

RUNTIMEPATH=${VIM_RESET_CONFDIR},$(get_vim_rtp)
VIMRC=${VIM_RESET_CONFDIR}/_vimrc

if [[ ! -d ${VIM_RESET_CONFDIR}/bin ]]
then
    mkdir "${VIM_RESET_CONFDIR}/bin"
fi

if [[ ! -f ${VIM_RESET_CONFDIR}/bin/vim ]]
then
    cat > "${VIM_RESET_CONFDIR}/bin/vim" <<OUTPUT
#!/usr/bin/env bash
# GENERATED_BY_VIM_RESET
# don't delete the line above

${VIM} --cmd 'set runtimepath=${RUNTIMEPATH}' -u '${VIMRC}' \$@
OUTPUT
    chmod +x "${VIM_RESET_CONFDIR}/bin/vim"
fi

path_push "${VIM_RESET_CONFDIR}/bin"

echo "========================"
echo "VIMRC=${VIMRC}"
echo "VIMRUNTIME=${RUNTIMEPATH}"
echo "========================"

if [[ ! -f ${VIMRC} ]]
then
    echo
    echo "WARNING: ${VIMRC} doesn't exist, please remember to create it or copy your current ~/.vimrc file" >&2
    echo
fi
