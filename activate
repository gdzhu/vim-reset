#!/usr/bin/env bash

if [[ "$VIMCONFIG_DIR" == "" ]]
then
    # this is a common one-liner copied from
    # http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
    SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" 
    VIMCONFIG_DIR="${SCRIPT_DIR}/vimconfig"
    echo "You didn't specify VIMCONFIG_DIR environment, default using ${VIMCONFIG_DIR}" >&2
else
    echo "Using ${VIMCONFIG_DIR}" >&2
fi

if [[ ! -d "${VIMCONFIG_DIR}" ]]
then
    echo "Creating ${VIMCONFIG_DIR}" >&2
    mkdir -p "${VIMCONFIG_DIR}"
fi

TEMP=$( mktemp )
VIM=$( which vim )

$VIM -c "redir! > $TEMP" -c 'set runtimepath' -c 'q'

OLD_RUNTIMEPATH=$( tail -n1 $TEMP | awk -F= '{print $2}' | cut -d, -f2- )

RUNTIMEPATH="$VIMCONFIG_DIR,$OLD_RUNTIMEPATH"
VIMRC="${VIMCONFIG_DIR}/_vimrc"

alias vim="$VIM --cmd 'set runtimepath=${RUNTIMEPATH}' -u ${VIMRC}"
alias vi=vim

echo "========================"
echo "VIMRC=${VIMRC}"
echo "VIMRUNTIME=${RUNTIMEPATH}"
echo "========================"
echo ""

if [[ ! -f "${VIMRC}" ]]
then
    echo "WARNING: ${VIMRC} doesn't exist, please remember to create it or copy your current ~/.vimrc file" >&2
fi
